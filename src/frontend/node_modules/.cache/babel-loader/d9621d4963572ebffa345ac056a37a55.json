{"ast":null,"code":"var _jsxFileName = \"/home/aparna/DASS project/frontend/src/components/maps/Map.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { CssBaseline, Grid, Paper, Typography, useMediaQuery } from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\n/*import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [coordinate, setCoordinate] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [bound, setBounds] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref;\n      setCoordinate({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: \"AIzaSyC6iRBFOLSe9oLj4s0UiaiapQRGsYhkFYw\"\n        },\n        defaultCenter: coordinate,\n        defaultZoom: 14,\n        onChange: e => {\n          console.log(e);\n          setCoordinate({\n            lat: e.center.lat,\n            lng: e.center.lng\n          });\n          setBounds({\n            ne: e.marginBounds.ne,\n            sw: e.marginBounds.sw\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"MqUEH8H3vEGSC3pvypGULgOXi1M=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/aparna/DASS project/frontend/src/components/maps/Map.js"],"names":["useState","useEffect","CssBaseline","Grid","Paper","Typography","useMediaQuery","GoogleMapReact","Map","props","name","setName","coordinate","setCoordinate","lat","lng","bound","setBounds","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","textAlign","height","width","key","e","console","log","center","ne","marginBounds","sw"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,aAA/C,QAAoE,mBAApE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAACc,IAAAA,GAAG,EAAC,CAAL;AAAOC,IAAAA,GAAG,EAAC;AAAX,GAAD,CAA5C;AACA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBjB,QAAQ,CAAC,IAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,QAAyC;AAAA,UAAxC;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ;AAAV,OAAwC;AAChFV,MAAAA,aAAa,CAAC;AAAEC,QAAAA,GAAG,EAAEQ,QAAP;AAAiBP,QAAAA,GAAG,EAAEQ;AAAtB,OAAD,CAAb;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,2BACP;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA,6BAEA,QAAC,cAAD;AACE,QAAA,gBAAgB,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADpB;AAEE,QAAA,aAAa,EAAEf,UAFjB;AAGE,QAAA,WAAW,EAAE,EAHf;AAIE,QAAA,QAAQ,EAAGgB,CAAD,IAAO;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAf,UAAAA,aAAa,CAAC;AAAEC,YAAAA,GAAG,EAAEc,CAAC,CAACG,MAAF,CAASjB,GAAhB;AAAqBC,YAAAA,GAAG,EAAEa,CAAC,CAACG,MAAF,CAAShB;AAAnC,WAAD,CAAb;AACAE,UAAAA,SAAS,CAAC;AAAEe,YAAAA,EAAE,EAAEJ,CAAC,CAACK,YAAF,CAAeD,EAArB;AAAyBE,YAAAA,EAAE,EAAEN,CAAC,CAACK,YAAF,CAAeC;AAA5C,WAAD,CAAT;AACD;AARH;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBD,CAhCD;;GAAM1B,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { CssBaseline, Grid, Paper, Typography, useMediaQuery } from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\n/*import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';*/\n\nconst Map = (props) => {\n  const [name, setName] = useState(\"\");\n  const [coordinate, setCoordinate] = useState({lat:0,lng:0});\n  const [bound, setBounds] = useState(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\n      setCoordinate({ lat: latitude, lng: longitude });\n    });\n  }, []);\n  \n  return <div style={{ textAlign: \"center\" }}>\n  <div style={{ height: '100vh', width: '100%' }}>\n  \n  <GoogleMapReact\n    bootstrapURLKeys={{ key: \"AIzaSyC6iRBFOLSe9oLj4s0UiaiapQRGsYhkFYw\" }}\n    defaultCenter={coordinate}\n    defaultZoom={14}\n    onChange={(e) => {\n      console.log(e);\n      setCoordinate({ lat: e.center.lat, lng: e.center.lng });\n      setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n    }}\n  >\n   {/*  <AnyReactComponent\n      lat={59.955413}\n      lng={30.337844}\n      text=\"My Marker\"\n    /> */}\n  </GoogleMapReact>\n</div>\n</div>;\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}