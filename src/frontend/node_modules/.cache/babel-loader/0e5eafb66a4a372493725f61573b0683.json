{"ast":null,"code":"var _jsxFileName = \"/home/aparna/DASS project/frontend/src/components/maps/Map.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport GoogleMapReact from 'google-map-react';\n/*import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst Main = styled('main', {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref => {\n  let {\n    theme,\n    open\n  } = _ref;\n  return {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    })\n  };\n});\n_c = Main;\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref2 => {\n  let {\n    theme,\n    open\n  } = _ref2;\n  return {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: `${drawerWidth}px`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    })\n  };\n});\n_c2 = AppBar;\nconst DrawerHeader = styled('div')(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  };\n});\n_c3 = DrawerHeader;\nexport default function Map() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [coordinate, setCoordinate] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [bound, setBounds] = useState(null);\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(_ref4 => {\n      let {\n        coords: {\n          latitude,\n          longitude\n        }\n      } = _ref4;\n      setCoordinate({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          sx: {\n            mr: 2,\n            ...(open && {\n              display: 'none'\n            })\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          children: \"Persistent drawer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          \"aria-label\": \"mailbox folders\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Search\",\n            fullWidth: true,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            } // onChange={customFunction}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'ltr' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 52\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: \"AIzaSyC6iRBFOLSe9oLj4s0UiaiapQRGsYhkFYw\"\n          },\n          defaultCenter: coordinate,\n          defaultZoom: 14,\n          onChange: e => {\n            console.log(e);\n            setCoordinate({\n              lat: e.center.lat,\n              lng: e.center.lng\n            });\n            setBounds({\n              ne: e.marginBounds.ne,\n              sw: e.marginBounds.sw\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"bBGnPpiwPa7gFZkfFA0wOpnYsgc=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = Map;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"AppBar\");\n$RefreshReg$(_c3, \"DrawerHeader\");\n$RefreshReg$(_c4, \"Map\");","map":{"version":3,"sources":["/home/aparna/DASS project/frontend/src/components/maps/Map.js"],"names":["React","styled","useTheme","Box","Drawer","CssBaseline","MuiAppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useState","useEffect","TextField","InputAdornment","SearchIcon","GoogleMapReact","drawerWidth","Main","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","width","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","Map","name","setName","coordinate","setCoordinate","lat","lng","bound","setBounds","setOpen","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","handleDrawerOpen","handleDrawerClose","mr","endAdornment","flexShrink","boxSizing","direction","map","text","index","height","key","e","console","log","center","ne","marginBounds","sw"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport GoogleMapReact from 'google-map-react';\n/*import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';*/\n\n  \nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n    }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\n\n    \n  \n    \nexport default function Map() {\n    const [name, setName] = useState(\"\");\n    const [coordinate, setCoordinate] = useState({lat:0,lng:0});\n    const [bound, setBounds] = useState(null);\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\n          setCoordinate({ lat: latitude, lng: longitude });\n        });\n      }, []);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar>\n            \n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{ mr: 2, ...(open && { display: 'none' }) }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        Persistent drawer\n                    </Typography>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Search\"\n              fullWidth={true}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              // onChange={customFunction}\n            />\n          </List>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                sx={{\n                    width: drawerWidth,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: drawerWidth,\n                        boxSizing: 'border-box',\n                    },\n                }}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n            >\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n                <List>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <Main open={open}>\n                <DrawerHeader />\n                <div style={{ height: '100vh', width: '100%' }}>\n  \n  <GoogleMapReact\n    bootstrapURLKeys={{ key: \"AIzaSyC6iRBFOLSe9oLj4s0UiaiapQRGsYhkFYw\" }}\n    defaultCenter={coordinate}\n    defaultZoom={14}\n    onChange={(e) => {\n      console.log(e);\n      setCoordinate({ lat: e.center.lat, lng: e.center.lng });\n      setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n    }}\n  >\n   {/*  <AnyReactComponent\n      lat={59.955413}\n      lng={30.337844}\n      text=\"My Marker\"\n    /> */}\n  </GoogleMapReact>\n</div>\n            </Main>\n        </Box>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}