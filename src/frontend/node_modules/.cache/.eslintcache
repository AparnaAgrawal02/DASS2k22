[{"/home/aparna/DASS project/frontend/src/index.js":"1","/home/aparna/DASS project/frontend/src/App.js":"2","/home/aparna/DASS project/frontend/src/reportWebVitals.js":"3","/home/aparna/DASS project/frontend/src/components/common/Home.js":"4","/home/aparna/DASS project/frontend/src/components/common/Register.js":"5","/home/aparna/DASS project/frontend/src/components/users/UsersList.js":"6","/home/aparna/DASS project/frontend/src/components/users/Profile.js":"7","/home/aparna/DASS project/frontend/src/components/templates/Navbar.js":"8","/home/aparna/DASS project/frontend/src/components/maps/Map.js":"9","/home/aparna/DASS project/frontend/src/components/maps/SideBar.js":"10","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/index.js":"11","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/reportWebVitals.js":"12","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/App.js":"13","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/components/maps/Map.js":"14","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/components/templates/Navbar.js":"15"},{"size":500,"mtime":1642110262349,"results":"16","hashOfConfig":"17"},{"size":1149,"mtime":1645298598673,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1642110262349,"results":"19","hashOfConfig":"17"},{"size":311,"mtime":1642110262349,"results":"20","hashOfConfig":"17"},{"size":1571,"mtime":1642110262349,"results":"21","hashOfConfig":"17"},{"size":5240,"mtime":1642110262349,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1642110262349,"results":"23","hashOfConfig":"17"},{"size":1196,"mtime":1645293694701,"results":"24","hashOfConfig":"17"},{"size":7047,"mtime":1646459772167,"results":"25","hashOfConfig":"17"},{"size":330,"mtime":1645294454919,"results":"26","hashOfConfig":"17"},{"size":500,"mtime":1642110262349,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1642110262349,"results":"29","hashOfConfig":"28"},{"size":1177,"mtime":1646461416051,"results":"30","hashOfConfig":"28"},{"size":10536,"mtime":1646510542023,"results":"31","hashOfConfig":"28"},{"size":1196,"mtime":1645293694701,"results":"32","hashOfConfig":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"ri4zar",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5rvpgc",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aparna/DASS project/frontend/src/index.js",[],["72","73"],"/home/aparna/DASS project/frontend/src/App.js",["74","75","76"],"import { BrowserRouter, Routes, Route, Outlet } from \"react-router-dom\";\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport \"./App.css\";\n\nimport UsersList from \"./components/users/UsersList\";\nimport Home from \"./components/common/Home\";\nimport Register from \"./components/common/Register\";\nimport Map from \"./components/maps/Map\";\nimport Navbar from \"./components/templates/Navbar\";\nimport Profile from \"./components/users/Profile\";\nimport SideBar from \"./components/maps/SideBar\"\n\nconst Layout = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"users\" element={<UsersList />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"map\" element={\n             <Map />\n          \n          \n          } />\n          <Route path=\"profile\" element={<Profile />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/aparna/DASS project/frontend/src/reportWebVitals.js",[],"/home/aparna/DASS project/frontend/src/components/common/Home.js",["77","78"],"import { useState, useEffect } from \"react\";\n\nconst Home = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    setName(\"Dass TAs\");\n  }, []);\n\n  return <div style={{ textAlign: \"center\" }}>Happy Coding - {name}</div>;\n};\n\nexport default Home;\n","/home/aparna/DASS project/frontend/src/components/common/Register.js",["79"],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\nconst Register = (props) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [date, setDate] = useState(null);\n\n  const onChangeUsername = (event) => {\n    setName(event.target.value);\n  };\n\n  const onChangeEmail = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const resetInputs = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setDate(null);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const newUser = {\n      name: name,\n      email: email,\n      date: Date.now(),\n    };\n\n    axios\n      .post(\"http://localhost:4000/user/register\", newUser)\n      .then((response) => {\n        alert(\"Created\\t\" + response.data.name);\n        console.log(response.data);\n      });\n\n    resetInputs();\n  };\n\n  return (\n    <Grid container align={\"center\"} spacing={2}>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={onChangeUsername}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={onChangeEmail}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" onClick={onSubmit}>\n          Register\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n","/home/aparna/DASS project/frontend/src/components/users/UsersList.js",["80","81","82","83","84"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\n\nconst UsersList = (props) => {\n  const [users, setUsers] = useState([]);\n  const [sortedUsers, setSortedUsers] = useState([]);\n  const [sortName, setSortName] = useState(true);\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/user\")\n      .then((response) => {\n        setUsers(response.data);\n        setSortedUsers(response.data);\n        setSearchText(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const sortChange = () => {\n    let usersTemp = users;\n    const flag = sortName;\n    usersTemp.sort((a, b) => {\n      if (a.date != undefined && b.date != undefined) {\n        return (1 - flag * 2) * (new Date(a.date) - new Date(b.date));\n      } else {\n        return 1;\n      }\n    });\n    setUsers(usersTemp);\n    setSortName(!sortName);\n  };\n\n  const customFunction = (event) => {\n    console.log(event.target.value);\n    setSearchText(event.target.value);\n  };\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12} md={3} lg={3}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <ListItem text>\n              <h1>Filters</h1>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={9} lg={9}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Search\"\n              fullWidth={true}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              // onChange={customFunction}\n            />\n          </List>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12} md={3} lg={3}>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <ListItem>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  Salary\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Enter Min\"\n                    fullWidth={true}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Enter Max\"\n                    fullWidth={true}\n                  />\n                </Grid>\n              </Grid>\n            </ListItem>\n            <Divider />\n            <ListItem divider>\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={users}\n                getOptionLabel={(option) => option.name}\n                fullWidth\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Select Names\"\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} md={9} lg={9}>\n          <Paper>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell> Sr No.</TableCell>\n                  <TableCell>\n                    {\" \"}\n                    <Button onClick={sortChange}>\n                      {sortName ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n                    </Button>\n                    Date\n                  </TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user, ind) => (\n                  <TableRow key={ind}>\n                    <TableCell>{ind}</TableCell>\n                    <TableCell>{user.date}</TableCell>\n                    <TableCell>{user.name}</TableCell>\n                    <TableCell>{user.email}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default UsersList;\n","/home/aparna/DASS project/frontend/src/components/users/Profile.js",["85"],"import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Profile = (props) => {\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/profile\") // unimplemented\n      .then((response) => {\n        setDetails(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n  return <div></div>;\n};\n\nexport default Profile;\n","/home/aparna/DASS project/frontend/src/components/templates/Navbar.js",[],"/home/aparna/DASS project/frontend/src/components/maps/Map.js",["86","87","88","89"],"import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport GoogleMapReact from 'google-map-react';\n/*import LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';*/\n\n// Get proper error message based on the code.\nconst getPositionErrorMessage = code => {\n  switch (code) {\n    case 1:\n      return 'Permission denied.';\n    case 2:\n      return 'Position unavailable.';\n    case 3:\n      return 'Timeout reached.';\n  }\n}\n\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\n\n\n\n\nexport default function Map() {\n  const [name, setName] = useState(\"\");\n  const [coordinate, setCoordinate] = useState({ lat: 0, lng: 0 });\n  const [bound, setBounds] = useState(null);\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        position =>{console.log(`Lat: ${position.coords.latitude} Lng: ${position.coords.longitude}`)\n        setCoordinate({ lat: position.coords.latitude, lng: position.coords.longitude })},\n        err => alert(`Error (${err.code}): ${getPositionErrorMessage(err.code)}`)\n      );\n      console.log(\"lag rahi hai meri\")\n    } else {\n      alert('Geolocation is not supported by your browser.');\n    }\n  }, []);\n\n \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <List component=\"nav\" aria-label=\"mailbox folders\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Search\"\n              fullWidth={true}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            // onChange={customFunction}\n            />\n          </List>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        <div style={{ height: '100vh', width: '100%' }}>\n\n          <GoogleMapReact\n          \n            bootstrapURLKeys={{ key: \"AIzaSyC6iRBFOLSe9oLj4s0UiaiapQRGsYhkFYw\" }}\n            /* {console.log(coordinate)} */\n            defaultCenter={coordinate}\n            defaultZoom={14}\n            onChange={(e) => {\n              console.log(coordinate)\n              console.log(e);\n             /*  setCoordinate({ lat: e.center.lat, lng: e.center.lng }); */\n              setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n            }\n          }  \n          >\n             \n             <LocationOnIcon fontSize=\"large\" sx={{ color: \"red\"}} lat={coordinate.lat} lng={coordinate.lng} \n             />\n            {/*  <AnyReactComponent\n      lat={59.955413}\n      lng={30.337844}\n      text=\"My Marker\"\n    /> */}\n          </GoogleMapReact>\n        </div>\n      </Main>\n    </Box>\n  );\n}\n","/home/aparna/DASS project/frontend/src/components/maps/SideBar.js",["90","91"],"import { useState, useEffect } from \"react\";\nimport { CssBaseline, Grid } from '@material-ui/core';\nconst SideBar = (props) => {\n  const [name, setName] = useState(\"\");\n\n\n  useEffect(() => {\n    setName(\"Dass TAs\");\n  }, []);\n\n  return <div style={{ textAlign: \"center\" }}>Happy Coding - {name}</div>;\n};\n\nexport default SideBar;\n","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/index.js",[],"/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/reportWebVitals.js",[],"/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/App.js",["92","93"],"import { BrowserRouter, Routes, Route, Outlet } from \"react-router-dom\";\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport \"./App.css\";\n\n/* import UsersList from \"./components/users/UsersList\";\nimport Home from \"./components/common/Home\";\nimport Register from \"./components/common/Register\"; */\nimport Map from \"./components/maps/Map\";\n import Navbar from \"./components/templates/Navbar\";\n/*import Profile from \"./components/users/Profile\";\nimport SideBar from \"./components/maps/SideBar\" */\n\nconst Layout = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          {/* <Route path=\"/\" element={<Home />} />\n          <Route path=\"users\" element={<UsersList />} />\n          <Route path=\"register\" element={<Register />} /> */}\n          <Route path=\"map\" element={\n             <Map />\n          \n          \n          } />\n        {/*   <Route path=\"profile\" element={<Profile />} /> */}\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/components/maps/Map.js",["94","95","96","97","98","99","100","101","102","103"],"/home/aparna/Desktop/DASS2K22-Team-11/src/frontend/src/components/templates/Navbar.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":27},{"ruleId":"108","severity":1,"message":"113","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":15},{"ruleId":"108","severity":1,"message":"114","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"115","line":5,"column":17,"nodeType":"110","messageId":"111","endLine":5,"endColumn":25},{"ruleId":"108","severity":1,"message":"116","line":10,"column":10,"nodeType":"110","messageId":"111","endLine":10,"endColumn":14},{"ruleId":"108","severity":1,"message":"117","line":25,"column":10,"nodeType":"110","messageId":"111","endLine":25,"endColumn":21},{"ruleId":"108","severity":1,"message":"118","line":27,"column":10,"nodeType":"110","messageId":"111","endLine":27,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":46,"column":18,"nodeType":"121","messageId":"122","endLine":46,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":46,"column":41,"nodeType":"121","messageId":"122","endLine":46,"endColumn":43},{"ruleId":"108","severity":1,"message":"123","line":56,"column":9,"nodeType":"110","messageId":"111","endLine":56,"endColumn":23},{"ruleId":"108","severity":1,"message":"124","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":30,"column":3,"nodeType":"127","messageId":"128","endLine":37,"endColumn":4},{"ruleId":"108","severity":1,"message":"129","line":93,"column":10,"nodeType":"110","messageId":"111","endLine":93,"endColumn":14},{"ruleId":"108","severity":1,"message":"130","line":93,"column":16,"nodeType":"110","messageId":"111","endLine":93,"endColumn":23},{"ruleId":"108","severity":1,"message":"131","line":95,"column":10,"nodeType":"110","messageId":"111","endLine":95,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":27},{"ruleId":"108","severity":1,"message":"132","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":20},{"ruleId":"108","severity":1,"message":"133","line":17,"column":8,"nodeType":"110","messageId":"111","endLine":17,"endColumn":17},{"ruleId":"108","severity":1,"message":"134","line":18,"column":8,"nodeType":"110","messageId":"111","endLine":18,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":33,"column":3,"nodeType":"127","messageId":"128","endLine":40,"endColumn":4},{"ruleId":"108","severity":1,"message":"135","line":98,"column":10,"nodeType":"110","messageId":"111","endLine":98,"endColumn":21},{"ruleId":"108","severity":1,"message":"136","line":98,"column":23,"nodeType":"110","messageId":"111","endLine":98,"endColumn":37},{"ruleId":"108","severity":1,"message":"137","line":101,"column":16,"nodeType":"110","messageId":"111","endLine":101,"endColumn":23},{"ruleId":"108","severity":1,"message":"138","line":102,"column":17,"nodeType":"110","messageId":"111","endLine":102,"endColumn":25},{"ruleId":"108","severity":1,"message":"139","line":103,"column":18,"nodeType":"110","messageId":"111","endLine":103,"endColumn":27},{"ruleId":"108","severity":1,"message":"131","line":105,"column":10,"nodeType":"110","messageId":"111","endLine":105,"endColumn":15},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'SideBar' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'date' is assigned a value but never used.","'sortedUsers' is assigned a value but never used.","'searchText' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'customFunction' is assigned a value but never used.","'details' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'bound' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setState' is assigned a value but never used.","'setPostal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]